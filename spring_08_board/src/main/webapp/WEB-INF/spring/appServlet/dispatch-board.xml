<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- [1] DataSource 빈 선언 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>
	<!-- 2번째 빈 선언 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value> classpath:config/boardMapper.xml</value>
			</list>
		</property>
		<!-- <property name="configLocation" value="classpath:part01_mybatis/configuration.xml"/> -->

	</bean>
	<!-- [3] SqlSessionTemplate빈 선언 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- spring JDBC나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager이 
		트랜잭션 관리자로 사용된다. -->
	<!-- [4] 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- [5] 선언전 트랜잭션 : <tx:advice>태그를 이용한 트랜잭션 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process"
				rollback-for="org.springframework.dao.DuplicateKeyException" />
			<tx:method name="*Process"
				rollback-for="java.lang.Exeption" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* service.Board*.*(..))" />
	</aop:config>

	<!-- [6] 보드임프선언 -->
	<bean id="dao" class="dao.BoardDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>
	<!-- [7] 서비스선언 -->
	<bean id="service" class="service.BoardServiceImp">
		<property name="dao" ref="dao" />
	</bean>
	<!-- 파일 업로드 시작 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="1000000000"/>
	
	</bean>
	<!--  파일 업로드 끝 -->
	
	<!-- [8] 컨트롤러 빈 선언 -->
	<bean class="controller.BoardController">
		<property name="service" ref="service" />
	</bean>
	<!-- 다운로드 뷰 선언 -->
	<bean id="download" class="view.BoardDownLoadView">
	<property name="dao" ref="dao"/>
	</bean>
	
	
	<!-- [9] -->
	<bean class ="org.springframework.web.servlet.view.BeanNameViewResolver">
	<property name="order" value="1"/>
	</bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
<property name="order" value="2"/>
	</bean>




</beans>
