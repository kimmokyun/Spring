package part02_annotation;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.AfterThrowing;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;

//공통 로직만 구현해 놓은 클래스 - Advice
@Aspect
public class AdviceCommon {
	public AdviceCommon() {
		// TODO Auto-generated constructor stub
	}
@Before(value="exection(* part02_annotation.ServiceImp.prn1(..))")
	public void comm1() {
		System.out.println("before");
	}
@After(value="execution(* part02_annotation.ServiceImp.prn2(..))")
	public void comm2() {
		System.out.println("after");
	}
@AfterReturning(value="execution(* part02_annotation.ServiceImp.prn3(..))",returning="name")
	public void comm3(String name) {
		System.out.println(name);
	}
@AfterThrowing(value="execution(* part02_annotation.ServiceImp.prn4(..))", throwing = "ex")
	public void comm4(Exception ex) {
		System.out.println("comm4:" + ex);
	}
	public void comm5(ProceedingJoinPoint point) {
		System.out.println("comm5 start");
		try {
			point.proceed();
		} catch (Throwable e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("comm5 end");
	}
}

